namespace :promotions do

  desc "Backpopulates Promotions tableato handle payments_count, and backpopulates PoromotionInstance table to handle status"
  task :backpopulate => :environment do
    errors = 0
    array_of_manual_ids = [27240, 20676, 15288, 14632, 14166, 14050, 13948, 13947, 13936, 13917, 13904, 13854, 13831, 13823, 13822, 13798, 13795, 13768, 13757, 13743, 13738, 13734, 13715, 13452, 13423, 13420, 13414, 13403, 13401, 13362, 13313, 13206, 13181, 13129, 13085, 13068, 13025, 12963, 12960, 12954, 12943, 12931, 12930, 12928, 12892, 12867, 12862, 12841, 12840, 12803, 12624, 12616, 12612, 12590, 12545, 12540, 12533, 12523, 12522, 12507, 12479, 12468, 12437, 12431, 12430, 12428, 12420, 12388, 12358, 12344, 12341, 12331, 12287, 12269, 12266, 12255, 12250, 12249, 12235, 12184, 12139, 12091, 12088, 12062, 12059, 12051, 12047, 12014, 12005, 11992, 11944, 11925, 11919, 11916, 11899, 11893, 11884, 11873, 11852, 11848, 11836, 11827, 11801, 11792, 11785, 11769, 11763, 11760, 11749, 11737, 11712, 11689, 11687, 11666, 11659, 11646, 11612, 11603, 11593, 11592, 11590, 11585, 11583, 11572, 11555, 11534, 11522, 11513, 11502, 11496, 11494, 11485, 11484, 11468, 11457, 11449, 11422, 11409, 11404, 11398, 11392, 11389, 11387, 11384, 11376, 11366, 11336, 11335, 11327, 11316, 11300, 11291, 11274, 11267, 11226, 11225, 11211, 11210, 11209, 11191, 11186, 11181, 11179, 11177, 11165, 11160, 11146, 11141, 11136, 11131, 11125, 11124, 11103, 11098, 11095, 11074, 11071, 11070, 11030, 11016, 10964, 10959, 10954, 10929, 10922, 10917, 10905, 10904, 10873, 10872, 10864, 10859, 10837, 10797, 10778, 10776, 10771, 10769, 10767, 10746, 10734, 10732, 10724, 10706, 10704, 10703, 10700, 10699, 10694, 10691, 10677, 10670, 10647, 10631, 10594, 10579, 10570, 10556, 10553, 10544, 10543, 10537, 10535, 10512, 10495, 10478, 10472, 10471, 10470, 10464, 10459, 10453, 10430, 10428, 10414, 10407, 10400, 10386, 10342, 10306, 10300, 10278, 10271, 10253, 10251, 10248, 10245, 10243, 10235, 10227, 10222, 10214, 10194, 10125, 10083, 10067, 10058, 10057, 10027, 10026, 10003, 10002, 9995, 9976, 9968, 9953, 9950, 9938, 9934, 9931, 9910, 9900, 9897, 9889, 9878, 9871, 9865, 9860, 9857, 9844, 9817, 9810, 9801, 9790, 9771, 9763, 9762, 9742, 9727, 9713, 9709, 9701, 9700, 9679, 9654, 9653, 9636, 9635, 9612, 9607, 9606, 9601, 9596, 9588, 9576, 9567, 9564, 9516, 9509, 9488, 9481, 9475, 9468, 9463, 9455, 9451, 9445, 9431, 9412, 9411, 9409, 9402, 9332, 9330, 9323, 9320, 9311, 9299, 9227, 9197, 9163, 9125, 9112, 9105, 9090, 9034, 9012, 9011, 9008, 8939, 8932, 8869, 8815, 8790, 8778, 8733, 8696, 8685, 8644, 8536, 8517, 8486, 8461, 8452, 8451, 8436, 8434, 8416, 8349, 8344, 8335, 8316, 8309, 8296, 8294, 8291, 8277, 8263, 8204, 8193, 8178, 8165, 8124, 8109, 8088, 8083, 8065, 8058, 8009, 8003, 7992, 7991, 7982, 7974, 7964, 7963, 7960, 7959, 7869, 7867, 7861, 7858, 7856, 7854, 7837, 7820, 7813, 7812, 7810, 7746, 7744, 7731, 7730, 7729, 7699, 7692, 7690, 7660, 7639, 7627, 7590, 7582, 7523, 7495, 7494, 7489, 7488, 7446, 7421, 7420, 7417, 7393, 7382, 7381, 7376, 7369, 7360, 7355, 7348, 7338, 7316, 7308, 7253, 7234, 7223, 7217, 7214, 7169, 7148, 7121, 7103, 7065, 7059, 7054, 7051, 7045, 7039, 7038, 7032, 7019, 7004, 7003, 6989, 6984, 6981, 6976, 6971, 6957, 6891, 6888, 6882, 6868, 6851, 6833, 6795, 6790] 
    manual_count = array_of_manual_ids.count

    puts "Backpopulating Promotions..."
    Promotion.find_each do |promotion|
      puts "...#{promotion.name}"
      if promotion.payments_count.nil?
        promotion.payments_count = 1
        puts "... ...Set to one."
        unless promotion.save
          puts "... ...ERROR!"
          errors += 1
        end
      else
        puts "... ...Ignored - payments_count already #{promotion.payments_count}."
      end
    end

    puts "Backpopulating PromotionInstance..."
    PromotionInstance.find_each do |pi|
      puts "...#{pi.id}"
      if pi.status.nil?
        if pi.loan_task.present?
          puts "... ...Has loan task, set to applied."
          pi.status = 'applied'
        elsif array_of_manual_ids.include?(pi.id)
          puts "... ...Manual target, set to applied."
          pi.status = 'applied'
          manual_count -= 1
        else
          puts "... ...Doesn't have loan task, set to associated."
          pi.status = 'associated'
        end
        unless pi.save
          puts "... ...ERROR!"
          errors += 1
        end
      else
        puts "... ...Ignored, status already #{pi.status}."
      end
    # TODO: Also needs to backpopulate for manual promotions
    end
    if errors > 0
      puts "/!\ There were errors when running the script."
    elsif manual_count != 0
      puts "/!\ ERROR: The manual adjustment probably did not run correctly."
    else
      puts ":) Script finished with no errors."
    end
  end
end

