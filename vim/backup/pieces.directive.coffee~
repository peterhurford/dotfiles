'use strict'

angular.module 'threeManChessApp'
.directive 'pieces', ->
  restrict: 'C',
  link: (scope, element) ->
    scope.place = (piece, color, x, y) ->
      piece_match = {
        'K': '♚',
        'Q': '♛',
        'R': '♜',
        'B': '♝',
        'N': '♞',
        'P': '♟'
      }
      color_match = {
        'B': { bg: '#000000', outline: '#777777', width: 0.5 }
        'G': { bg: '#777777', outline: '#000000', width: 1.5 }
        'W': { bg: '#ffffff', outline: '#000000', width: 2 }
      }
      canvas = $("canvas")[0]
      ctx = canvas.getContext("2d")
      ctx.lineWidth = color_match[color].width
      piece_size = 36
      board_size = 600
      ctx.font = "#{piece_size}px Arial"
      ctx.fillStyle = color_match[color].bg
      ctx.strokeStyle = color_match[color].color
      tmp3_x = board_size / 2 + Math.cos(Math.PI * 3 /2) * piece_size / 16
      tmp3_y = board_size / 2 - Math.sin(Math.PI * 3 /2) * piece_size / 16

      ctx.translate(tmp3_x, tmp3_y)
      rad = (1+2*x)/48 * Math.PI*2
      ctx.rotate(tmp_rad = rad + Math.PI * 3 / 2)
      rad -= (1.5+2*x)/48 * Math.PI*2
      ctx.translate(
        tmp_x = Math.sin(rad) * (board_size / 2 - piece_size / 8 - 3 - (y) * 1 / 6 * board_size * (1 / 2 - 1 / 8)),
        tmp_y = Math.cos(rad) * (board_size / 2 - piece_size / 8 - 3 - (y) * 1 / 6 * board_size * (1 / 2 - 1 / 8))
      )
      ctx.fillText(piece_match[piece], 0, 0)
      ctx.strokeText(piece_match[piece], 0, 0)
      ctx.translate(-tmp_x, -tmp_y)
      ctx.rotate(- tmp_rad)
      ctx.translate(- tmp3_x, - tmp3_y)

    scope.initialSetup = ->
      pieces = []
      for i in [1..3]
        for piece in ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']
          pieces.push(piece)
      
      for x in [0..24]
        scope.place(pieces[x], ['W', 'B', 'G'][Math.floor(x/8)], (x+2)%24, 0)
        scope.place('P', ['W', 'B', 'G'][Math.floor(x/8)], (x+2)%24, 1)
    
    scope.initialSetup()
