'use strict'

angular.module 'threeManChessApp'
.factory 'Pieces', ($rootScope) ->
  $rootScope.place = (piece, color, x, y) ->
    return unless x >= 0 && x <= 23 && y >= 0
    x = (24*2 - (x - 9)) % 24
    ctx = $rootScope.ctx
    piece_size = 36
    board_size = 600
    piece_match = {
      'king': '♚',
      'queen': '♛',
      'rook': '♜',
      'bishop': '♝',
      'knight': '♞',
      'pawn': '♟'
    }
    color_match = {
      'black': { bg: '#000000', outline: '#777777', width: 0.5 }
      'grey': { bg: '#777777', outline: '#000000', width: 1.5 }
      'white': { bg: '#ffffff', outline: '#000000', width: 2 }
    }
    
    ctx.lineWidth = color_match[color].width
    ctx.font = "#{piece_size}px Arial"
    ctx.fillStyle = color_match[color].bg
    ctx.strokeStyle = color_match[color].color

    #tmp3_x = board_size / 2 - Math.cos(Math.PI * 3 /2) * piece_size / 16 #Math.pow(2, 7 - y)
    #tmp3_y = board_size / 2 + Math.sin(Math.PI * 3 /2) * piece_size / 16 #Math.pow(2, 7 - y)
    tmp3_x = board_size / 2 + Math.cos(Math.PI * 3 /2) * piece_size / 16
    tmp3_y = board_size / 2 - Math.sin(Math.PI * 3 /2) * piece_size / 16
    ctx.translate(tmp3_x, tmp3_y)
    rad = (1+2*x)/48 * Math.PI*2
    ctx.rotate(tmp_rad = rad + Math.PI * 3 / 2)
    rad -= (1.5+2*x)/48 * Math.PI*2
    magic_jitter_x = (180 / 5) * y
    magic_jitter_y = -3 # Slight offset from the edge of the board
    ctx.translate(
      tmp_x = Math.sin(rad) * (board_size / 2 - piece_size / 8 + magic_jitter_x - (y) * 1 / 6 * board_size * (1 / 2 - 1 / 8)),
      tmp_y = Math.cos(rad) * (board_size / 2 - piece_size / 8 + magic_jitter_y - (y) * 1 / 6 * board_size * (1 / 2 - 1 / 8))
    )

    ctx.fillText(piece_match[piece], 0, 0)
    ctx.strokeText(piece_match[piece], 0, 0)

    ctx.translate(-tmp_x, -tmp_y)
    ctx.rotate(-tmp_rad)
    ctx.translate(-tmp3_x, -tmp3_y)


  place: (piece, color, x, y) ->
    $rootScope.place(piece, color, x, y)


  placePieces: (ignore_x, ignore_y) ->
    for y in [0..5]
      for x in [0..23]
        p = $rootScope.chessboard.piece_at(x, y)
        continue if !p? or (ignore_x? && ignore_y? && x == ignore_x && y == ignore_y)
        $rootScope.place(p.type, p.color, x, y)

