module Api
  class PromotionsController < FrontendController

    before_filter :authenticate_customer!, except: [:create, :destroy]

    def create
      @customer = current_or_guest_customer
      coupon_code = params[:coupon_code]

      promotion = Promotion.where(coupon_code: coupon_code).first ||
        PreapprovedRecord.claim_code(@customer, coupon_code)

      if promotion
        binding.pry
        unless error = Promotion::Engine.create_promotion_instance(customer: @customer, promotion: promotion)
          # if you change what this promotion return value is make sure you change in CASE
          return render :status => 200, :json => { promotion: promotion.attributes.merge({ application_message: promotion.application_message }) }
        end
      else
        error = "Coupon code was not found."
      end
      return render json: { error: error }, status: 400
    end

    def destroy
      @customer = current_or_guest_customer

      promotion = Promotion.where(id: params[:id]).first

      if promotion && pi = @customer.ongoing_application.promotion_instances.where(promotion_uuid: promotion.uuid).first
        pi.delete
        return render :status => 200, :json => { message: "Promotion removed." }
      else
        return render json: { error: "Promotion not found." }, status: 400
      end
    end

  end
end
