class PromotionInstanceDecorator < Draper::Decorator
  delegate_all

  def customer_name
    person = customer_application.customer.person || promotable.customer.person rescue nil
    if person.present?
      "#{person[:first_name]} #{person[:last_name]}"
    else
      "Customer ##{customer_application.customer.id}"
    end
  end

  def payments_display
    return nil if promotion_instance.promotion.blank? || promotion_instance.promotable.blank? 
    payments_count = begin
      (promotion_instance.total_finished_payments / promotion_instance.needed_payments).floor
    rescue
      0
    end
    "#{payments_count} / #{promotion_instance.promotion.payments_count}"
  end

  def applicable_display
    return "No" if promotion_instance.promotion.blank? || promotion_instance.promotable.blank? 
    return "" if status == 'applied'
    return "Yes" if usable?
    "No"
  end
end
